(()=>{"use strict";var e={630:()=>{var e=document.getElementById("currency-one"),t=document.getElementById("currency-two"),n=document.getElementById("amount-one"),a=document.getElementById("amount-two"),o=document.getElementById("amount-USD"),r=document.getElementById("amount-EUR"),u=document.getElementById("amount-JPY"),c=document.getElementById("amount-KRW"),l=document.getElementById("rate"),d=document.getElementById("swap");function i(){var d=e.value.length?e.value:"RUB",i=t.value.length?t.value:"USD";fetch("https://api.exchangerate-api.com/v4/latest/".concat(d)).then((function(e){return e.json()})).then((function(e){var t=e.rates[i],m=e.rates.USD,v=e.rates.EUR,s=e.rates.JPY,g=e.rates.KRW;l.innerText="1 ".concat(d," = ").concat(t," ").concat(i),a.innerHTML=(n.value*t).toFixed(2),o.innerHTML=(n.value*m).toFixed(2)+" $",r.innerHTML=(n.value*v).toFixed(2)+" €",u.innerHTML=(n.value*s).toFixed(2)+" ¥",c.innerHTML=(n.value*g).toFixed(2)+" ₩"}))}function m(e,t){fetch("https://api.exchangerate-api.com/v4/latest/USD").then((function(e){return e.json()})).then((function(n){Object.keys(n.rates).map((function(n){e.innerHTML+='<option value="'.concat(n,'" ').concat(n===t?"selected":"",">").concat(n,"</option>")}))}))}e.addEventListener("change",i),n.addEventListener("input",i),t.addEventListener("change",i),d.addEventListener("click",(function(){var n=e.value;e.value=t.value,t.value=n,i()})),m(e,"RUB"),m(t,"USD"),i()},24:()=>{var e,t,n,a,o,r;e=new Date,document.querySelector("footer .year").innerHTML=e.getFullYear(),t=document.querySelectorAll('input[type="date"]'),a=(n=new Date).getDate(),o=n.getMonth()+1,r=n.getFullYear(),o<10&&(o="0"+o),a<10&&(a="0"+a),n=r+"-"+o+"-"+a,t.forEach((function(e){e.value=n}))}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n(630),n(24)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DYWxjSG9ua2FpLy4vc3JjL2pzL3NjcmlwdHMuanMiLCJ3ZWJwYWNrOi8vQ2FsY0hvbmthaS8uL3NyYy9qcy9zZXJ2aWNlLmpzIiwid2VicGFjazovL0NhbGNIb25rYWkvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vQ2FsY0hvbmthaS93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9DYWxjSG9ua2FpL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9DYWxjSG9ua2FpL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiXSwibmFtZXMiOlsiY3VycmVuY3lFbF9vbmUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY3VycmVuY3lFbF90d28iLCJhbW91bnRFbF9vbmUiLCJhbW91bnRFbF90d28iLCJhbW91bnREb2xsYXIiLCJhbW91bnRFdXJvIiwiYW1vdW50WWVuIiwiYW1vdW50V29uIiwicmF0ZUVsIiwic3dhcCIsImNhbGN1bGF0ZSIsImN1cnJlbmN5X29uZSIsInZhbHVlIiwibGVuZ3RoIiwiY3VycmVuY3lfdHdvIiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwianNvbiIsImRhdGEiLCJyYXRlIiwicmF0ZXMiLCJyYXRlVVNEIiwicmF0ZUVVUiIsInJhdGVKUFkiLCJyYXRlS1JXIiwiaW5uZXJUZXh0IiwiaW5uZXJIVE1MIiwidG9GaXhlZCIsInNlbGVjdCIsIml0ZW0iLCJzZWxlY3RlZCIsIk9iamVjdCIsImtleXMiLCJtYXAiLCJlbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0ZW1wIiwiZGF0ZSIsImlucHV0RGF0ZSIsIm5vdyIsImRheSIsIm1vbnRoIiwieWVhciIsIkRhdGUiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0RnVsbFllYXIiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZ2V0RGF0ZSIsImdldE1vbnRoIiwiZm9yRWFjaCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCJdLCJtYXBwaW5ncyI6Im1DQUVBLElBQU1BLEVBQWlCQyxTQUFTQyxlQUFlLGdCQUN6Q0MsRUFBaUJGLFNBQVNDLGVBQWUsZ0JBQ3pDRSxFQUFlSCxTQUFTQyxlQUFlLGNBQ3ZDRyxFQUFlSixTQUFTQyxlQUFlLGNBRXZDSSxFQUFlTCxTQUFTQyxlQUFlLGNBQ3ZDSyxFQUFhTixTQUFTQyxlQUFlLGNBQ3JDTSxFQUFZUCxTQUFTQyxlQUFlLGNBQ3BDTyxFQUFZUixTQUFTQyxlQUFlLGNBRXBDUSxFQUFTVCxTQUFTQyxlQUFlLFFBQ2pDUyxFQUFPVixTQUFTQyxlQUFlLFFBRXJDLFNBQVNVLElBQ0wsSUFBTUMsRUFBZWIsRUFBZWMsTUFBTUMsT0FBU2YsRUFBZWMsTUFBUSxNQUNwRUUsRUFBZWIsRUFBZVcsTUFBTUMsT0FBU1osRUFBZVcsTUFBUSxNQUUxRUcsTUFBTSw4Q0FBRCxPQUErQ0osSUFDL0NLLE1BQUssU0FBQUMsR0FBRyxPQUFJQSxFQUFJQyxVQUNoQkYsTUFBSyxTQUFBRyxHQUNGLElBQU1DLEVBQU9ELEVBQUtFLE1BQU1QLEdBQ2xCUSxFQUFVSCxFQUFLRSxNQUFMLElBQ1ZFLEVBQVVKLEVBQUtFLE1BQUwsSUFDVkcsRUFBVUwsRUFBS0UsTUFBTCxJQUNWSSxFQUFVTixFQUFLRSxNQUFMLElBRWhCYixFQUFPa0IsVUFBUCxZQUF3QmYsRUFBeEIsY0FBMENTLEVBQTFDLFlBQWtETixHQUVsRFgsRUFBYXdCLFdBQWF6QixFQUFhVSxNQUFRUSxHQUFNUSxRQUFRLEdBRTdEeEIsRUFBYXVCLFdBQWF6QixFQUFhVSxNQUFRVSxHQUFTTSxRQUFRLEdBQUcsS0FDbkV2QixFQUFXc0IsV0FBYXpCLEVBQWFVLE1BQVFXLEdBQVNLLFFBQVEsR0FBRyxLQUNqRXRCLEVBQVVxQixXQUFhekIsRUFBYVUsTUFBUVksR0FBU0ksUUFBUSxHQUFHLEtBQ2hFckIsRUFBVW9CLFdBQWF6QixFQUFhVSxNQUFRYSxHQUFTRyxRQUFRLEdBQUcsUUFJNUUsU0FBU0MsRUFBT0MsRUFBTUMsR0FDbEJoQixNQUFNLGtEQUNEQyxNQUFLLFNBQUFDLEdBQUcsT0FBSUEsRUFBSUMsVUFDaEJGLE1BQUssU0FBQUcsR0FDb0JhLE9BQU9DLEtBQUtkLEVBQUtFLE9BQ3ZCYSxLQUFJLFNBQVNDLEdBQ3pCTCxFQUFLSCxXQUFMLHlCQUFxQ1EsRUFBckMsYUFBNENBLElBQU9KLEVBQVcsV0FBYSxHQUEzRSxZQUFpRkksRUFBakYsbUJBS2hCckMsRUFBZXNDLGlCQUFpQixTQUFVMUIsR0FDMUNSLEVBQWFrQyxpQkFBaUIsUUFBUzFCLEdBQ3ZDVCxFQUFlbUMsaUJBQWlCLFNBQVUxQixHQUUxQ0QsRUFBSzJCLGlCQUFpQixTQUFTLFdBQzNCLElBQU1DLEVBQU92QyxFQUFlYyxNQUM1QmQsRUFBZWMsTUFBUVgsRUFBZVcsTUFDdENYLEVBQWVXLE1BQVF5QixFQUN2QjNCLE9BSUptQixFQUFPL0IsRUFBZ0IsT0FDdkIrQixFQUFPNUIsRUFBZ0IsT0FDdkJTLEssUUM5REEsSUFDUTRCLEVBTUFDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBVkFMLEVBQU8sSUFBSU0sS0FDSjdDLFNBQVM4QyxjQUFjLGdCQUU3QmxCLFVBQVlXLEVBQUtRLGNBR2xCUCxFQUFZeEMsU0FBU2dELGlCQUFpQixzQkFFdENOLEdBREFELEVBQU0sSUFBSUksTUFDQUksVUFDVk4sRUFBUUYsRUFBSVMsV0FBYSxFQUN6Qk4sRUFBT0gsRUFBSU0sY0FDWEosRUFBUSxLQUFJQSxFQUFRLElBQU1BLEdBQzFCRCxFQUFNLEtBQUlBLEVBQU0sSUFBTUEsR0FDMUJELEVBQU1HLEVBQU8sSUFBTUQsRUFBUSxJQUFNRCxFQUVqQ0YsRUFBVVcsU0FBUSxTQUFDZixHQUNmQSxFQUFHdkIsTUFBUTRCLE9DbEJmVyxFQUEyQixHQUcvQixTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCRSxJQUFqQkQsRUFDSCxPQUFPQSxFQUFhRSxRQUdyQixJQUFJQyxFQUFTTixFQUF5QkUsR0FBWSxDQUdqREcsUUFBUyxJQU9WLE9BSEFFLEVBQW9CTCxHQUFVSSxFQUFRQSxFQUFPRCxRQUFTSixHQUcvQ0ssRUFBT0QsUUNwQmZKLEVBQW9CTyxFQUFLRixJQUN4QixJQUFJRyxFQUFTSCxHQUFVQSxFQUFPSSxXQUM3QixJQUFPSixFQUFpQixRQUN4QixJQUFNLEVBRVAsT0FEQUwsRUFBb0JVLEVBQUVGLEVBQVEsQ0FBRUcsRUFBR0gsSUFDNUJBLEdDTFJSLEVBQW9CVSxFQUFJLENBQUNOLEVBQVNRLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWFosRUFBb0JjLEVBQUVGLEVBQVlDLEtBQVNiLEVBQW9CYyxFQUFFVixFQUFTUyxJQUM1RWpDLE9BQU9tQyxlQUFlWCxFQUFTUyxFQUFLLENBQUVHLFlBQVksRUFBTUMsSUFBS0wsRUFBV0MsTUNKM0ViLEVBQW9CYyxFQUFJLENBQUNJLEVBQUtDLElBQVV2QyxPQUFPd0MsVUFBVUMsZUFBZUMsS0FBS0osRUFBS0MsRyIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmNvbnN0IGN1cnJlbmN5RWxfb25lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2N1cnJlbmN5LW9uZScpO1xyXG5jb25zdCBjdXJyZW5jeUVsX3R3byA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjdXJyZW5jeS10d28nKTtcclxuY29uc3QgYW1vdW50RWxfb25lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Ftb3VudC1vbmUnKTtcclxuY29uc3QgYW1vdW50RWxfdHdvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Ftb3VudC10d28nKTtcclxuXHJcbmNvbnN0IGFtb3VudERvbGxhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhbW91bnQtVVNEJyk7XHJcbmNvbnN0IGFtb3VudEV1cm8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYW1vdW50LUVVUicpO1xyXG5jb25zdCBhbW91bnRZZW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYW1vdW50LUpQWScpO1xyXG5jb25zdCBhbW91bnRXb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYW1vdW50LUtSVycpO1xyXG5cclxuY29uc3QgcmF0ZUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JhdGUnKTtcclxuY29uc3Qgc3dhcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzd2FwJyk7XHJcblxyXG5mdW5jdGlvbiBjYWxjdWxhdGUoKSB7XHJcbiAgICBjb25zdCBjdXJyZW5jeV9vbmUgPSBjdXJyZW5jeUVsX29uZS52YWx1ZS5sZW5ndGggPyBjdXJyZW5jeUVsX29uZS52YWx1ZSA6IFwiUlVCXCI7XHJcbiAgICBjb25zdCBjdXJyZW5jeV90d28gPSBjdXJyZW5jeUVsX3R3by52YWx1ZS5sZW5ndGggPyBjdXJyZW5jeUVsX3R3by52YWx1ZSA6IFwiVVNEXCI7XHJcblxyXG4gICAgZmV0Y2goYGh0dHBzOi8vYXBpLmV4Y2hhbmdlcmF0ZS1hcGkuY29tL3Y0L2xhdGVzdC8ke2N1cnJlbmN5X29uZX1gKVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCByYXRlID0gZGF0YS5yYXRlc1tjdXJyZW5jeV90d29dO1xyXG4gICAgICAgICAgICBjb25zdCByYXRlVVNEID0gZGF0YS5yYXRlc1snVVNEJ107XHJcbiAgICAgICAgICAgIGNvbnN0IHJhdGVFVVIgPSBkYXRhLnJhdGVzWydFVVInXTtcclxuICAgICAgICAgICAgY29uc3QgcmF0ZUpQWSA9IGRhdGEucmF0ZXNbJ0pQWSddO1xyXG4gICAgICAgICAgICBjb25zdCByYXRlS1JXID0gZGF0YS5yYXRlc1snS1JXJ107XHJcblxyXG4gICAgICAgICAgICByYXRlRWwuaW5uZXJUZXh0ID0gYDEgJHtjdXJyZW5jeV9vbmV9ID0gJHtyYXRlfSAke2N1cnJlbmN5X3R3b31gO1xyXG5cclxuICAgICAgICAgICAgYW1vdW50RWxfdHdvLmlubmVySFRNTCA9IChhbW91bnRFbF9vbmUudmFsdWUgKiByYXRlKS50b0ZpeGVkKDIpO1xyXG5cclxuICAgICAgICAgICAgYW1vdW50RG9sbGFyLmlubmVySFRNTCA9IChhbW91bnRFbF9vbmUudmFsdWUgKiByYXRlVVNEKS50b0ZpeGVkKDIpKycgJCc7XHJcbiAgICAgICAgICAgIGFtb3VudEV1cm8uaW5uZXJIVE1MID0gKGFtb3VudEVsX29uZS52YWx1ZSAqIHJhdGVFVVIpLnRvRml4ZWQoMikrJyDigqwnO1xyXG4gICAgICAgICAgICBhbW91bnRZZW4uaW5uZXJIVE1MID0gKGFtb3VudEVsX29uZS52YWx1ZSAqIHJhdGVKUFkpLnRvRml4ZWQoMikrJyDCpSc7XHJcbiAgICAgICAgICAgIGFtb3VudFdvbi5pbm5lckhUTUwgPSAoYW1vdW50RWxfb25lLnZhbHVlICogcmF0ZUtSVykudG9GaXhlZCgyKSsnIOKCqSc7XHJcbiAgICAgICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNlbGVjdChpdGVtLCBzZWxlY3RlZCkge1xyXG4gICAgZmV0Y2goYGh0dHBzOi8vYXBpLmV4Y2hhbmdlcmF0ZS1hcGkuY29tL3Y0L2xhdGVzdC9VU0RgKVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBsZXQgYXJyQ3VycmVuY3lOYW1lID0gT2JqZWN0LmtleXMoZGF0YS5yYXRlcyk7XHJcbiAgICAgICAgICAgIGFyckN1cnJlbmN5TmFtZS5tYXAoZnVuY3Rpb24oZWwpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW0uaW5uZXJIVE1MICs9IChgPG9wdGlvbiB2YWx1ZT1cIiR7ZWx9XCIgJHtlbCA9PT0gc2VsZWN0ZWQgPyAnc2VsZWN0ZWQnIDogJyd9PiR7ZWx9PC9vcHRpb24+YCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG59XHJcblxyXG5jdXJyZW5jeUVsX29uZS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjYWxjdWxhdGUpO1xyXG5hbW91bnRFbF9vbmUuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBjYWxjdWxhdGUpO1xyXG5jdXJyZW5jeUVsX3R3by5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjYWxjdWxhdGUpO1xyXG5cclxuc3dhcC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGNvbnN0IHRlbXAgPSBjdXJyZW5jeUVsX29uZS52YWx1ZTtcclxuICAgIGN1cnJlbmN5RWxfb25lLnZhbHVlID0gY3VycmVuY3lFbF90d28udmFsdWU7XHJcbiAgICBjdXJyZW5jeUVsX3R3by52YWx1ZSA9IHRlbXA7XHJcbiAgICBjYWxjdWxhdGUoKTtcclxufSk7XHJcblxyXG5cclxuc2VsZWN0KGN1cnJlbmN5RWxfb25lLCBcIlJVQlwiKTtcclxuc2VsZWN0KGN1cnJlbmN5RWxfdHdvLCBcIlVTRFwiKTtcclxuY2FsY3VsYXRlKCk7IiwiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5sZXQgbm93WWVhciA9ICgpID0+IHtcclxuICAgIGxldCBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgIGxldCBzcGFuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZm9vdGVyIC55ZWFyJyk7XHJcblxyXG4gICAgc3Bhbi5pbm5lckhUTUwgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XHJcbn07XHJcbmxldCBub3dEYXRlSW5wdXQgPSAoKSA9PiB7XHJcbiAgICBsZXQgaW5wdXREYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW5wdXRbdHlwZT1cImRhdGVcIl0nKTtcclxuICAgIGxldCBub3cgPSBuZXcgRGF0ZSgpO1xyXG4gICAgbGV0IGRheSA9IG5vdy5nZXREYXRlKCk7XHJcbiAgICBsZXQgbW9udGggPSBub3cuZ2V0TW9udGgoKSArIDE7XHJcbiAgICBsZXQgeWVhciA9IG5vdy5nZXRGdWxsWWVhcigpO1xyXG4gICAgaWYgKG1vbnRoIDwgMTApIG1vbnRoID0gXCIwXCIgKyBtb250aDtcclxuICAgIGlmIChkYXkgPCAxMCkgZGF5ID0gXCIwXCIgKyBkYXk7XHJcbiAgICBub3cgPSB5ZWFyICsgXCItXCIgKyBtb250aCArIFwiLVwiICsgZGF5O1xyXG5cclxuICAgIGlucHV0RGF0ZS5mb3JFYWNoKChlbCkgPT4ge1xyXG4gICAgICAgIGVsLnZhbHVlID0gbm93O1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5ub3dZZWFyKCk7XHJcbm5vd0RhdGVJbnB1dCgpOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiXSwic291cmNlUm9vdCI6IiJ9